////////////////////////////////////////
//  Author: Antonio David López Machado
////////////////////////////////////////

#ifndef MATRIX4F_H
#define MATRIX4F_H

#include <SDL_opengl.h>
#include <math.h>

class Matrix4f
{
    public:

        //////////////////////////////////////////////////////////////////////////
        /**
        *    Constructor
        */
        //////////////////////////////////////////////////////////////////////////
        Matrix4f();

        //////////////////////////////////////////////////////////////////////////
        /**
        *    Destructor
        */
        //////////////////////////////////////////////////////////////////////////
        virtual ~Matrix4f();

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will make a translation transform
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        void translation(double x,double y,double z);

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will make a Scale transform
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        void scale(double x,double y,double z);

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will make a rotation transform
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        void rotation(float grade,const float x,const float y,const float z);

        //////////////////////////////////////////////////////////////////////////
        /**
        *    \return Return our current matrix4f
        */
        //////////////////////////////////////////////////////////////////////////
        GLdouble * getMatrix();

    protected:

    private:
        GLdouble * matrix;
};

#endif // MATRIX4F_H
