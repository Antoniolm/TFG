////////////////////////////////////////
//  Author: Antonio David López Machado
////////////////////////////////////////

#ifndef MESH_H
#define MESH_H

#include <vector>
#include <string>
#include "context.h"

using namespace std;

class Mesh
{
    public:
        //////////////////////////////////////////////////////////////////////////
        /** Default constructor */
        //////////////////////////////////////////////////////////////////////////
        Mesh();

        //////////////////////////////////////////////////////////////////////////
        /**  Constructor */
        /////////////////////////////////////////////////////////////////////////
        Mesh(string & aTextur,float aHeight,float aWidth,unsigned char aType);

        //////////////////////////////////////////////////////////////////////////
        /** Default destructor */
        //////////////////////////////////////////////////////////////////////////
        virtual ~Mesh();

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will show the object in our interface
        *    \return void
        */
        /////////////////////////////////////////////////////////////////////////
        virtual void visualization( Context & vis);

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will update the state of the object. That change need the
        *    current time in our application
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        virtual void updateState(float time);

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will clean the object
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        void clean();

        //////////////////////////////////////////////////////////////////////////
        /**
        *    The method will load the files(vexterShader,FragmentShader) and it
        *    links the shaders to a program too.
        *    \return void
        */
        //////////////////////////////////////////////////////////////////////////
        void LoadShader(string vertexShader,string FragmentShader);

    protected:

    private:
        //vector<vec3f> Triangle;
        //vector<vec3f> vertex;
        unsigned char type;
        float height;
        float width;
        string texture;
};

#endif // MESH_H
